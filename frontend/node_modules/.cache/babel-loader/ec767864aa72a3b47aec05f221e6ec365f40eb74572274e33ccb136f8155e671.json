{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdminPC\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport apiData from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    apiData.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    apiData.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  function handleEditProfileClick() {\n    setProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setAvatarPopupOpen(true);\n  }\n  function closeAllPopups() {\n    setProfilePopupOpen(false);\n    setPlacePopupOpen(false);\n    setAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards\n          //    onCardLike={handleCardLike}\n          //    onCardDelete={handleCardDelete}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm\n        //   isOpen={isDeletePopupOpen}\n        , {\n          onClose: closeAllPopups,\n          title: \"Вы уверены?\",\n          buttonText: \"Да\",\n          name: \"trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          isOpen: selectedCard,\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xd9O6P2VkS21wlYEnXKFg6aN914=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Main","Footer","ImagePopup","PopupWithForm","apiData","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setProfilePopupOpen","useState","isAddPlacePopupOpen","setPlacePopupOpen","isEditAvatarPopupOpen","setAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getUserInfo","then","data","catch","err","console","log","getInitialCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onClose","title","buttonText","name","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/AdminPC/dev/mesto-react/src/components/App.js"],"sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport apiData from '../utils/Api.js';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    apiData\n      .getUserInfo()\n      .then((data) => {setCurrentUser(data)})\n      .catch((err) => {console.log(err)})\n    }, [])\n\n  React.useEffect(() => {\n    apiData\n      .getInitialCards()\n      .then((data) => {setCards(data)})\n      .catch((err) => {console.log(err)})\n  }, []);  \n\n  function handleEditProfileClick() {\n    setProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setAvatarPopupOpen(true);\n  }\n  \n  function closeAllPopups() {\n    setProfilePopupOpen(false);\n    setPlacePopupOpen(false);\n    setAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <div className=\"page\">\n          <Header />\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n        //    onCardLike={handleCardLike}\n        //    onCardDelete={handleCardDelete}\n          />\n          <Footer />\n         \n           <PopupWithForm\n         //   isOpen={isDeletePopupOpen}\n            onClose={closeAllPopups}\n            title={\"Вы уверены?\"}\n            buttonText={\"Да\"}\n            name={\"trash\"}\n          />\n          <ImagePopup\n            isOpen={selectedCard}\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n </div>\n      </div>\n    </CurrentUserContext.Provider>\n    );\n  }\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAAQC,kBAAkB,QAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,sBAAsB,EAAEC,mBAAmB,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACC,mBAAmB,EAAEC,iBAAiB,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EACtE,MAAM,CAACG,qBAAqB,EAAEC,kBAAkB,CAAC,GAAGlB,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGpB,KAAK,CAACc,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGtB,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;EAE5Cd,KAAK,CAACyB,SAAS,CAAC,MAAM;IACpBnB,OAAO,CACJoB,WAAW,CAAC,CAAC,CACbC,IAAI,CAAEC,IAAI,IAAK;MAACN,cAAc,CAACM,IAAI,CAAC;IAAA,CAAC,CAAC,CACtCC,KAAK,CAAEC,GAAG,IAAK;MAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAAA,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAER9B,KAAK,CAACyB,SAAS,CAAC,MAAM;IACpBnB,OAAO,CACJ2B,eAAe,CAAC,CAAC,CACjBN,IAAI,CAAEC,IAAI,IAAK;MAACJ,QAAQ,CAACI,IAAI,CAAC;IAAA,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,IAAK;MAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAAA,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASI,sBAAsBA,CAAA,EAAG;IAChCrB,mBAAmB,CAAC,IAAI,CAAC;EAC3B;EAEA,SAASsB,mBAAmBA,CAAA,EAAG;IAC7BnB,iBAAiB,CAAC,IAAI,CAAC;EACzB;EAEA,SAASoB,qBAAqBA,CAAA,EAAG;IAC/BlB,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,SAASmB,cAAcA,CAAA,EAAG;IACxBxB,mBAAmB,CAAC,KAAK,CAAC;IAC1BG,iBAAiB,CAAC,KAAK,CAAC;IACxBE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,eAAe,CAAC,IAAI,CAAC;EACvB;EAEA,SAASkB,eAAeA,CAACC,IAAI,EAAE;IAC7BnB,eAAe,CAACmB,IAAI,CAAC;EACvB;EAEA,oBACE9B,OAAA,CAACF,kBAAkB,CAACiC,QAAQ;IAACC,KAAK,EAAEpB,WAAY;IAAAqB,QAAA,eAC9CjC,OAAA;MAAKkC,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBjC,OAAA;QAAKkC,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBjC,OAAA,CAACR,MAAM;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVtC,OAAA,CAACP,IAAI;UACH8C,YAAY,EAAEZ,qBAAsB;UACpCa,aAAa,EAAEf,sBAAuB;UACtCgB,UAAU,EAAEf,mBAAoB;UAChCgB,WAAW,EAAEb,eAAgB;UAC7Bf,KAAK,EAAEA;UACX;UACA;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACFtC,OAAA,CAACN,MAAM;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAETtC,OAAA,CAACJ;QACH;QAAA;UACG+C,OAAO,EAAEf,cAAe;UACxBgB,KAAK,EAAE,aAAc;UACrBC,UAAU,EAAE,IAAK;UACjBC,IAAI,EAAE;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACFtC,OAAA,CAACL,UAAU;UACToD,MAAM,EAAErC,YAAa;UACrBoB,IAAI,EAAEpB,YAAa;UACnBiC,OAAO,EAAEf;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAEhC;AAACpC,EAAA,CA9EMD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAgFZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}