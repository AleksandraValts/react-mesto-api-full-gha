{"ast":null,"code":"class ApiAuth {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  registerNewUser(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  loginUser(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._checkResponse(res));\n  }\n}\nconst apiAuth = new ApiAuth(\"https://auth.nomoreparties.co\");\nexport default apiAuth;","map":{"version":3,"names":["ApiAuth","constructor","baseUrl","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","registerNewUser","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","checkToken","token","Authorization","apiAuth"],"sources":["C:/Users/AdminPC/dev/react-mesto-auth/src/utils/ApiAuth.js"],"sourcesContent":["class ApiAuth {\r\n  constructor(baseUrl) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n \r\n  registerNewUser(email, password) {\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  loginUser(email, password) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  checkToken(token) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n}\r\nconst apiAuth = new ApiAuth(\"https://auth.nomoreparties.co\");\r\nexport default apiAuth;\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;EAEAE,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEAC,eAAeA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC/B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACtCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;EAEAgB,SAASA,CAACT,KAAK,EAAEC,QAAQ,EAAE;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACtCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;EAEAiB,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,WAAU,EAAE;MACxCY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,cAAc,CAACC,GAAG,CAAC,CAAC;EAC5C;AACF;AACA,MAAMoB,OAAO,GAAG,IAAIzB,OAAO,CAAC,+BAA+B,CAAC;AAC5D,eAAeyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}