{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n  getUserInfo() {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  getInitialCards() {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  addNewCard(data) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardId) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getCardLike(cardId) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  deleteCardLike(cardId) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeAvatar(data) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeUserInfo(data) {\n    const token = localStorage.getItem('jwt');\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }).then(res => this._checkResponse(res));\n  }\n}\nconst apiData = new Api({\n  url: 'http://localhost:4000'\n});\nexport default apiData;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","token","localStorage","getItem","fetch","authorization","then","getInitialCards","addNewCard","data","method","body","JSON","stringify","deleteCard","cardId","getCardLike","deleteCardLike","changeAvatar","changeUserInfo","apiData"],"sources":["C:/Users/AdminPC/dev/mesto-exp-full/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n    \r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return Promise.reject(res.status);\r\n        }\r\n    }\r\n\r\n    getUserInfo() {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/users/me`, {\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => this._checkResponse(res));\r\n    }\r\n\r\n    getInitialCards() {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/cards`, {\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => {\r\n        return this._checkResponse(res);\r\n      });\r\n    }\r\n\r\n    addNewCard(data) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/cards`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).then((res) => \r\n        this._checkResponse(res)\r\n      );\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/cards/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => {\r\n        return this._checkResponse(res);\r\n      });\r\n    }\r\n\r\n    getCardLike(cardId) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => {\r\n        return this._checkResponse(res);\r\n      });\r\n    }\r\n\r\n    deleteCardLike(cardId) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => {\r\n        return this._checkResponse(res);\r\n      });\r\n    }\r\n\r\n    changeAvatar(data) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/users/me/avatar`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).then((res) => {\r\n        return this._checkResponse(res);\r\n      });\r\n    }\r\n\r\n    changeUserInfo(data) {\r\n      const token = localStorage.getItem('jwt');\r\n      return fetch(`${this._url}/users/me`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).then((res) => this._checkResponse(res)\r\n      );\r\n    }\r\n}\r\n\r\nconst apiData = new Api ({\r\n  url: 'http://localhost:4000'\r\n});\r\n\r\nexport default apiData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}